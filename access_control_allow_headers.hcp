namespace buffer_handle_http_header
{
  template<config Config>
  template<action Action, class Iterator, class Element> inline
  char * access_control_allow_headers_t<Config>::handle(char * buffer, const Iterator & begin, const Iterator & end, Element & element)
  {
    typedef const character_separator_t<','> separator_type;

    return container_field_t<Config, true>::template handle
      <Action, Iterator, Element, separator_type>
      (buffer, "Access-Control-Allow-Headers", begin, end, element, separator_type());
  }

  template<config Config>
  template<action Action, class Iterator, class Element> inline
  char * long_access_control_allow_headers_t<Config>::handle(char * buffer, const Iterator & begin, const Iterator & end, Element & element)
  {
    typedef const character_separator_t<','> separator_type;

    return long_container_field_t<Config, true>::template handle
      <Action, Iterator, Element, separator_type>
      (buffer, "Access-Control-Allow-Headers", begin, end, element, separator_type());
  }
};
